openapi: 3.0.0
info:
  title: Caja de Ahorros
  version: 1.0.0
  description: API para gestionar clientes, cuentas y transacciones

paths:
  /clientes:
    get:
      summary: Obtener información de todos los clientes
      responses:
        '200':
          description: Respuesta exitosa
          content:
            application/json:
              example: {"mensaje": "Clientes obtenidos correctamente", "clientes": [{"id_cliente": 1, "nombre": "John Doe", "correo_electronico": "john.doe@example.com"}]}

  /clientes/{id_cliente}:
    get:
      summary: Obtener información de un cliente por ID
      parameters:
        - name: id_cliente
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Respuesta exitosa
          content:
            application/json:
              example: {"mensaje": "Cliente obtenido correctamente", "cliente": {"id_cliente": 1, "nombre": "John Doe", "correo_electronico": "john.doe@example.com"}}

    post:
      summary: Crear un nuevo cliente
      requestBody:
        content:
          application/json:
            example: {"nombre": "Nuevo Cliente", "correo_electronico": "nuevo.cliente@example.com", "password": "password123"}
      responses:
        '200':
          description: Respuesta exitosa
          content:
            application/json:
              example: {"mensaje": "Cliente creado exitosamente", "cliente": {"id_cliente": 2, "nombre": "Nuevo Cliente", "correo_electronico": "nuevo.cliente@example.com"}}

    delete:
      summary: Eliminar un cliente por ID
      parameters:
        - name: id_cliente
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Respuesta exitosa
          content:
            application/json:
              example: {"mensaje": "Cliente eliminado correctamente"}

  /cuentas:
    post:
      summary: Crear una nueva cuenta
      requestBody:
        content:
          application/json:
            example: {"id_usuario": 1, "saldo": 1000.0}
      responses:
        '200':
          description: Respuesta exitosa
          content:
            application/json:
              example: {"mensaje": "Cuenta creada exitosamente", "cuenta": {"id_cuenta": 1, "id_usuario": 1, "saldo": 1000.0}}

  /cuentas/{id_cuenta}:
    delete:
      summary: Eliminar una cuenta por ID
      parameters:
        - name: id_cuenta
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Respuesta exitosa
          content:
            application/json:
              example: {"mensaje": "Cuenta eliminada correctamente"}


    get:
      summary: Obtener cuentas de un usuario por correo y contraseña
      parameters:
        - name: correo
          in: query
          required: true
          schema:
            type: string
        - name: contrasena
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Respuesta exitosa
          content:
            application/json:
              example: {"mensaje": "Cuentas obtenidas correctamente", "cuentas": [{"id_cuenta": 1, "id_usuario": 1, "saldo": 1000.0}]}

  /transacciones:
    post:
      summary: Realizar una nueva transacción
      requestBody:
        content:
          application/json:
            example: {"id_cuenta": 1, "tipo_transaccion": 1, "monto": 100.0, "fecha_transaccion": "2023-01-01T00:00:00"}
      responses:
        '200':
          description: Respuesta exitosa
          content:
            application/json:
              example: {"mensaje": "Transacción exitosa", "transaccion": {"id_transaccion": 1, "id_cuenta": 1, "tipo_transaccion": 1, "monto": 100.0, "fecha_transaccion": "2023-01-01T00:00:00"}}

  /transacciones/{id_cuenta}:
    get:
      summary: Obtener transacciones de una cuenta por ID
      parameters:
        - name: id_cuenta
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Respuesta exitosa
          content:
            application/json:
              example: {"mensaje": "Transacciones obtenidas correctamente", "transacciones": [{"tipo_transaccion": 1, "monto": 100.0}]}
